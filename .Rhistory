mutate(co2_cap_norm=100*range01(co2_cap)) %>%
mutate(fossil_share_norm=100*range01(fossil_share))
fossil_rent_norm_q <- quantile(fossil_sector$fossil_rent_norm, probs = c(0.7), na.rm = T)
fossil_share_norm_q <- quantile(fossil_sector$fossil_share_norm, probs = c(0.7), na.rm = T)
fossil_sector_fig <- fossil_sector %>%
filter(!(is.na(regions))) %>%
mutate(country_viz=ifelse(fossil_rent_norm>fossil_rent_norm_q|fossil_share_norm>fossil_share_norm_q, iso3c,NA)) %>%
ggplot() +
geom_point(aes(x=fossil_rent, y=fossil_share, color=regions), size=4, alpha=0.6)+
geom_text_repel(aes(x=fossil_rent, y=fossil_share, label=country_viz))+
theme_ipsum()+
xlab("Fossil Rent % of GDP (Coal+Gas+Oil)")+
ylab("Fossil fuels in electricity generation % (Coal+Gas+Oil)")+
ggtitle("Carbon Lock-in")+
scale_colour_manual(values=colours)
fossil_sector_fig
fossil_sector <- WDI(country = "all",
indicator = c(
'coal_rent'='NY.GDP.COAL.RT.ZS',
'co2_cap'='EN.ATM.CO2E.PC', 'population'='SP.POP.TOTL',
'gas_rent'='NY.GDP.NGAS.RT.ZS',
'oil_rent'='NY.GDP.PETR.RT.ZS',
'coal_share'= 'eg.elc.coal.zs',
'gas_share'= 'EG.ELC.NGAS.ZS',
'oil_share'='eg.elc.petr.zs'),
start = 2010,end = 2019,extra = TRUE) %>%
as_tibble() %>%
filter(region!="Aggregates") %>%
arrange(iso3c, year) %>%
fill(coal_rent,.direction = "down") %>%
fill(co2_cap,.direction = "down") %>%
fill(gas_rent,.direction = "down") %>%
fill(oil_rent,.direction = "down") %>%
fill(coal_share,.direction = "down") %>%
fill(gas_share,.direction = "down") %>%
fill(oil_share,.direction = "down")  %>%
filter(year==2019) %>%
select(iso3c,country,coal_rent, gas_rent, oil_rent, co2_cap, population, coal_share, gas_share, oil_share) %>%
left_join(regions, by=c("iso3c")) %>%
#filter(population>10*10^6) %>%
filter(iso3c!="TLS") %>% # non-validated data for TLS
mutate(fossil_rent=coal_rent+oil_rent+gas_rent) %>%
mutate(fossil_share=coal_share+gas_share+oil_share) %>%
#filter(fossil_share>90) %>% # to make figure less crowded
mutate(fossil_rent_norm=100*range01(fossil_rent)) %>%
mutate(co2_cap_norm=100*range01(co2_cap)) %>%
mutate(fossil_share_norm=100*range01(fossil_share))
fossil_rent_norm_q <- quantile(fossil_sector$fossil_rent_norm, probs = c(0.7), na.rm = T)
fossil_share_norm_q <- quantile(fossil_sector$fossil_share_norm, probs = c(0.7), na.rm = T)
fossil_sector_fig <- fossil_sector %>%
filter(!(is.na(regions))) %>%
mutate(country_viz=ifelse(fossil_rent_norm>fossil_rent_norm_q|fossil_share_norm>fossil_share_norm_q, iso3c,NA)) %>%
ggplot() +
geom_point(aes(x=fossil_rent, y=fossil_share, color=regions), size=4, alpha=0.6)+
geom_text_repel(aes(x=fossil_rent, y=fossil_share, label=country_viz))+
theme_ipsum()+
xlab("Fossil Rent % of GDP (Coal+Gas+Oil)")+
ylab("Fossil fuels in electricity generation % (Coal+Gas+Oil)")+
ggtitle("Carbon Lock-in")+
scale_colour_manual(values=colours)
fossil_sector_fig
fossil_rent_norm_q <- quantile(fossil_sector$fossil_rent_norm, probs = c(0.8), na.rm = T)
fossil_share_norm_q <- quantile(fossil_sector$fossil_share_norm, probs = c(0.8), na.rm = T)
fossil_sector_fig <- fossil_sector %>%
filter(!(is.na(regions))) %>%
mutate(country_viz=ifelse(fossil_rent_norm>fossil_rent_norm_q|fossil_share_norm>fossil_share_norm_q, iso3c,NA)) %>%
ggplot() +
geom_point(aes(x=fossil_rent, y=fossil_share, color=regions), size=4, alpha=0.6)+
geom_text_repel(aes(x=fossil_rent, y=fossil_share, label=country_viz))+
theme_ipsum()+
xlab("Fossil Rent % of GDP (Coal+Gas+Oil)")+
ylab("Fossil fuels in electricity generation % (Coal+Gas+Oil)")+
ggtitle("Carbon Lock-in")+
scale_colour_manual(values=colours)
fossil_sector_fig
fossil_rent_norm_q <- quantile(fossil_sector$fossil_rent_norm, probs = c(0.6), na.rm = T)
fossil_share_norm_q <- quantile(fossil_sector$fossil_share_norm, probs = c(0.6), na.rm = T)
fossil_sector_fig <- fossil_sector %>%
filter(!(is.na(regions))) %>%
mutate(country_viz=ifelse(fossil_rent_norm>fossil_rent_norm_q|fossil_share_norm>fossil_share_norm_q, iso3c,NA)) %>%
ggplot() +
geom_point(aes(x=fossil_rent, y=fossil_share, color=regions), size=4, alpha=0.6)+
geom_text_repel(aes(x=fossil_rent, y=fossil_share, label=country_viz))+
theme_ipsum()+
xlab("Fossil Rent % of GDP (Coal+Gas+Oil)")+
ylab("Fossil fuels in electricity generation % (Coal+Gas+Oil)")+
ggtitle("Carbon Lock-in")+
scale_colour_manual(values=colours)
fossil_sector_fig
fossil_rent_norm_q <- quantile(fossil_sector$fossil_rent_norm, probs = c(0.7), na.rm = T)
fossil_share_norm_q <- quantile(fossil_sector$fossil_share_norm, probs = c(0.7), na.rm = T)
fossil_sector_fig <- fossil_sector %>%
filter(!(is.na(regions))) %>%
mutate(country_viz=ifelse(fossil_rent_norm>fossil_rent_norm_q|fossil_share_norm>fossil_share_norm_q, iso3c,NA)) %>%
ggplot() +
geom_point(aes(x=fossil_rent, y=fossil_share, color=regions), size=4, alpha=0.6)+
geom_text_repel(aes(x=fossil_rent, y=fossil_share, label=country_viz))+
theme_ipsum()+
xlab("Fossil Rent % of GDP (Coal+Gas+Oil)")+
ylab("Fossil fuels in electricity generation % (Coal+Gas+Oil)")+
ggtitle("Carbon Lock-in")+
scale_colour_manual(values=colours)
fossil_sector_fig
methane <-import("essd_ghg_data.xlsx", which = "data") %>%
filter(year==2019) %>%
filter(sector_title=="AFOLU") %>%
filter(gas=="CH4") %>%
group_by(ISO)
View(methane)
View(methane)
methane <-import("essd_ghg_data.xlsx", which = "data") %>%
filter(year==2019) %>%
filter(sector_title=="AFOLU") %>%
filter(gas=="CH4") %>%
group_by(ISO) %>%
mutate(value=value*gwp100_ar5) %>%
summarise(methane_emissions=sum(value)) %>%
rename(iso3c=ISO)
agri_sector <- WDI(country = "all",
indicator = c(
'population'='SP.POP.TOTL',
'share_agriculture'='NV.AGR.TOTL.ZS'),
start = 2010,end = 2020,extra = TRUE) %>%
as_tibble() %>%
filter(region!="Aggregates") %>%
arrange(iso3c, year) %>%
fill(share_agriculture,.direction = "down")  %>%
left_join(methane, by=c("iso3c")) %>%
left_join(regions, by=c("iso3c")) %>%
#filter(country!="Somalia") %>%
#filter(country!="Chad") %>%
mutate(methane_capita=methane_emissions/population) %>%
mutate(agri_gdp_norm=100*range01(share_agriculture)) %>%
mutate(methane_cap_norm=100*range01(methane_capita)) %>%
filter(year==2019)
meth_cap_q <- quantile(agri_sector$methane_cap_norm, probs = c(0.7), na.rm = T)
agri_gdp_norm_q <- quantile(agri_sector$agri_gdp_norm, probs = c(0.7), na.rm = T)
agri_sector_fig <- agri_sector %>%
filter(!(is.na(regions))) %>%
mutate(country_viz=ifelse(methane_cap_norm>meth_cap_q|agri_gdp_norm>agri_gdp_norm_q, iso3c,NA)) %>%
ggplot() +
geom_point(aes(x=share_agriculture, y=methane_capita, color=regions), size=4, alpha=0.6)+
geom_text_repel(aes(x=share_agriculture, y=methane_capita, label=country_viz))+
theme_ipsum()+
xlab("Share of Agriculture in GDP %")+
ylab("Methane Emissions (AFOLU) per Capita in tCO2e")+
ggtitle("Methane Lock-in")+
scale_colour_manual(values=colours)
agri_sector_fig
agri_sector <- WDI(country = "all",
indicator = c(
'population'='SP.POP.TOTL',
'share_agriculture'='NV.AGR.TOTL.ZS'),
start = 2010,end = 2020,extra = TRUE) %>%
as_tibble() %>%
filter(region!="Aggregates") %>%
arrange(iso3c, year) %>%
fill(share_agriculture,.direction = "down")  %>%
left_join(methane, by=c("iso3c")) %>%
left_join(regions, by=c("iso3c")) %>%
filter(country!="Somalia") %>% # non-validated data
filter(country!="Chad") %>% # non-validated data
mutate(methane_capita=methane_emissions/population) %>%
mutate(agri_gdp_norm=100*range01(share_agriculture)) %>%
mutate(methane_cap_norm=100*range01(methane_capita)) %>%
filter(year==2019)
meth_cap_q <- quantile(agri_sector$methane_cap_norm, probs = c(0.7), na.rm = T)
agri_gdp_norm_q <- quantile(agri_sector$agri_gdp_norm, probs = c(0.7), na.rm = T)
agri_sector_fig <- agri_sector %>%
filter(!(is.na(regions))) %>%
mutate(country_viz=ifelse(methane_cap_norm>meth_cap_q|agri_gdp_norm>agri_gdp_norm_q, iso3c,NA)) %>%
ggplot() +
geom_point(aes(x=share_agriculture, y=methane_capita, color=regions), size=4, alpha=0.6)+
geom_text_repel(aes(x=share_agriculture, y=methane_capita, label=country_viz))+
theme_ipsum()+
xlab("Share of Agriculture in GDP %")+
ylab("Methane Emissions (AFOLU) per Capita in tCO2e")+
ggtitle("Methane Lock-in")+
scale_colour_manual(values=colours)
agri_sector_fig
country_plot <- plot_grid(fossil_sector_fig,agri_sector_fig,labels=c("A", "B"), ncol = 1)
country_plot
ggsave("Figure2.png", units="in", width=7, height=9, dpi=300)
ggsave("Figure2.jpeg", units="in", width=7, height=9, dpi=300)
wgi<-import("wgi.csv") %>%
rename(countryname = "Country Name") %>%
rename(varname = "Series Code") %>%
rename(value = "2019 [YR2019]") %>%
mutate_at(vars(value), as.numeric) %>% # warning due to empty rows - deleted below
select(countryname, varname, value) %>%
mutate(iso3c=countrycode(countryname, "country.name", "iso3c")) %>%
select(-countryname) %>%
filter(is.na(iso3c)==F) %>%
mutate(varname = replace(varname, varname=="GE.EST", "gee")) %>%
mutate(varname = replace(varname, varname=="RL.EST", "rle")) %>%
pivot_wider(names_from = varname, values_from = value) %>%
add_column(year=2019) %>%
left_join(population_data, by=c("iso3c", "year")) %>%
left_join(regions, by=c("iso3c")) %>%
filter(!(is.na(regions))) %>%
group_by(year) %>%
mutate(ge_norm=range01(gee)*100) %>%
mutate(rl_norm=range01(rle)*100) %>%
mutate(instit_index=(ge_norm+rl_norm)/2)
ge_norm70 <- quantile(wgi$ge_norm, probs = c(0.7), na.rm = T)
rl_norm70 <- quantile(wgi$rl_norm, probs = c(0.7), na.rm = T)
instit_index50 <- quantile(wgi$instit_index, probs = c(0.5), na.rm = T)
# Figure
institutional_fig<-wgi %>%
mutate(country_viz=ifelse(ge_norm>ge_norm70|rl_norm>rl_norm70, iso3c,NA)) %>%
ggplot() +
geom_point(aes(y=ge_norm, x=rl_norm, color=regions), size=4, alpha=0.6)+
geom_text_repel(aes(y=ge_norm, x=rl_norm, label=country_viz))+
theme_ipsum()+
ylab("Government Effectiveness Score")+
xlab("Rule of Law Score")+
scale_colour_manual(values=colours)
institutional_fig
ggsave("Figure3.png", units="in", width=7, height=4, dpi=300)
ggsave("Figure3.jpeg", units="in", width=7, height=4, dpi=300)
wgi<-import("wgi.csv") %>%
rename(countryname = "Country Name") %>%
rename(varname = "Series Code") %>%
rename(value = "2019 [YR2019]") %>%
mutate_at(vars(value), as.numeric) %>% # warning due to empty rows - deleted below
select(countryname, varname, value) %>%
mutate(iso3c=countrycode(countryname, "country.name", "iso3c")) %>%
select(-countryname) %>%
filter(is.na(iso3c)==F) %>%
mutate(varname = replace(varname, varname=="GE.EST", "gee")) %>%
mutate(varname = replace(varname, varname=="RL.EST", "rle")) %>%
pivot_wider(names_from = varname, values_from = value) %>%
add_column(year=2019) %>%
left_join(population_data, by=c("iso3c", "year")) %>%
left_join(regions, by=c("iso3c")) %>%
filter(!(is.na(regions))) %>%
filter(iso3c!="GUM") %>% # remove small countries outliers
filter(iso3c!="ASM") %>%
filter(iso3c!="BRN") %>%
group_by(year) %>%
mutate(ge_norm=range01(gee)*100) %>%
mutate(rl_norm=range01(rle)*100) %>%
mutate(instit_index=(ge_norm+rl_norm)/2)
wgi<-import("wgi.csv") %>%
rename(countryname = "Country Name") %>%
rename(varname = "Series Code") %>%
rename(value = "2019 [YR2019]") %>%
mutate_at(vars(value), as.numeric) %>% # warning due to empty rows - deleted below
select(countryname, varname, value) %>%
mutate(iso3c=countrycode(countryname, "country.name", "iso3c")) %>%
select(-countryname) %>%
filter(is.na(iso3c)==F) %>%
mutate(varname = replace(varname, varname=="GE.EST", "gee")) %>%
mutate(varname = replace(varname, varname=="RL.EST", "rle")) %>%
pivot_wider(names_from = varname, values_from = value) %>%
add_column(year=2019) %>%
left_join(population_data, by=c("iso3c", "year")) %>%
left_join(regions, by=c("iso3c")) %>%
filter(!(is.na(regions))) %>%
filter(iso3c!="GUM") %>% # remove small countries outliers
filter(iso3c!="ASM") %>%
filter(iso3c!="BRN") %>%
filter(iso3c!="WSM") %>%
filter(iso3c!="PRI") %>%
filter(iso3c!="KIR") %>%
filter(iso3c!="LCA") %>%
group_by(year) %>%
mutate(ge_norm=range01(gee)*100) %>%
mutate(rl_norm=range01(rle)*100) %>%
mutate(instit_index=(ge_norm+rl_norm)/2)
ge_norm70 <- quantile(wgi$ge_norm, probs = c(0.7), na.rm = T)
rl_norm70 <- quantile(wgi$rl_norm, probs = c(0.7), na.rm = T)
instit_index50 <- quantile(wgi$instit_index, probs = c(0.5), na.rm = T)
institutional_fig<-wgi %>%
mutate(country_viz=ifelse(ge_norm>ge_norm70|rl_norm>rl_norm70, iso3c,NA)) %>%
ggplot() +
geom_point(aes(y=ge_norm, x=rl_norm, color=regions), size=4, alpha=0.6)+
geom_text_repel(aes(y=ge_norm, x=rl_norm, label=country_viz))+
theme_ipsum()+
ylab("Government Effectiveness Score")+
xlab("Rule of Law Score")+
scale_colour_manual(values=colours)
institutional_fig
ggsave("Figure3.png", units="in", width=7, height=4, dpi=300)
ggsave("Figure3.jpeg", units="in", width=7, height=4, dpi=300)
wgi<-import("wgi.csv") %>%
rename(countryname = "Country Name") %>%
rename(varname = "Series Code") %>%
rename(value = "2019 [YR2019]") %>%
mutate_at(vars(value), as.numeric) %>% # warning due to empty rows - deleted below
select(countryname, varname, value) %>%
mutate(iso3c=countrycode(countryname, "country.name", "iso3c")) %>%
select(-countryname) %>%
filter(is.na(iso3c)==F) %>%
mutate(varname = replace(varname, varname=="GE.EST", "gee")) %>%
mutate(varname = replace(varname, varname=="RL.EST", "rle")) %>%
pivot_wider(names_from = varname, values_from = value) %>%
add_column(year=2019) %>%
left_join(population_data, by=c("iso3c", "year")) %>%
left_join(regions, by=c("iso3c")) %>%
filter(!(is.na(regions))) %>%
filter(iso3c!="GUM") %>% # remove small countries outliers
filter(iso3c!="ASM") %>%
filter(iso3c!="BRN") %>%
filter(iso3c!="WSM") %>%
filter(iso3c!="PRI") %>%
filter(iso3c!="KIR") %>%
filter(iso3c!="LCA") %>%
filter(iso3c!="SYC") %>%
group_by(year) %>%
mutate(ge_norm=range01(gee)*100) %>%
mutate(rl_norm=range01(rle)*100) %>%
mutate(instit_index=(ge_norm+rl_norm)/2)
ge_norm70 <- quantile(wgi$ge_norm, probs = c(0.7), na.rm = T)
rl_norm70 <- quantile(wgi$rl_norm, probs = c(0.7), na.rm = T)
instit_index50 <- quantile(wgi$instit_index, probs = c(0.5), na.rm = T)
institutional_fig<-wgi %>%
mutate(country_viz=ifelse(ge_norm>ge_norm70|rl_norm>rl_norm70, iso3c,NA)) %>%
ggplot() +
geom_point(aes(y=ge_norm, x=rl_norm, color=regions), size=4, alpha=0.6)+
geom_text_repel(aes(y=ge_norm, x=rl_norm, label=country_viz))+
theme_ipsum()+
ylab("Government Effectiveness Score")+
xlab("Rule of Law Score")+
scale_colour_manual(values=colours)
institutional_fig
ggsave("Figure3.png", units="in", width=7, height=4, dpi=300)
ggsave("Figure3.jpeg", units="in", width=7, height=4, dpi=300)
wgi<-import("wgi.csv") %>%
rename(countryname = "Country Name") %>%
rename(varname = "Series Code") %>%
rename(value = "2019 [YR2019]") %>%
mutate_at(vars(value), as.numeric) %>% # warning due to empty rows - deleted below
select(countryname, varname, value) %>%
mutate(iso3c=countrycode(countryname, "country.name", "iso3c")) %>%
select(-countryname) %>%
filter(is.na(iso3c)==F) %>%
mutate(varname = replace(varname, varname=="GE.EST", "gee")) %>%
mutate(varname = replace(varname, varname=="RL.EST", "rle")) %>%
pivot_wider(names_from = varname, values_from = value) %>%
add_column(year=2019) %>%
left_join(population_data, by=c("iso3c", "year")) %>%
left_join(regions, by=c("iso3c")) %>%
filter(!(is.na(regions))) %>%
filter(iso3c!="GUM") %>% # remove small countries outliers
filter(iso3c!="ASM") %>%
filter(iso3c!="BRN") %>%
filter(iso3c!="WSM") %>%
filter(iso3c!="PRI") %>%
filter(iso3c!="KIR") %>%
filter(iso3c!="LCA") %>%
filter(iso3c!="SYC") %>%
filter(iso3c!="TUV") %>%
group_by(year) %>%
mutate(ge_norm=range01(gee)*100) %>%
mutate(rl_norm=range01(rle)*100) %>%
mutate(instit_index=(ge_norm+rl_norm)/2)
ge_norm70 <- quantile(wgi$ge_norm, probs = c(0.7), na.rm = T)
rl_norm70 <- quantile(wgi$rl_norm, probs = c(0.7), na.rm = T)
instit_index50 <- quantile(wgi$instit_index, probs = c(0.5), na.rm = T)
wgi<-import("wgi.csv") %>%
rename(countryname = "Country Name") %>%
rename(varname = "Series Code") %>%
rename(value = "2019 [YR2019]") %>%
mutate_at(vars(value), as.numeric) %>% # warning due to empty rows - deleted below
select(countryname, varname, value) %>%
mutate(iso3c=countrycode(countryname, "country.name", "iso3c")) %>%
select(-countryname) %>%
filter(is.na(iso3c)==F) %>%
mutate(varname = replace(varname, varname=="GE.EST", "gee")) %>%
mutate(varname = replace(varname, varname=="RL.EST", "rle")) %>%
pivot_wider(names_from = varname, values_from = value) %>%
add_column(year=2019) %>%
left_join(population_data, by=c("iso3c", "year")) %>%
left_join(regions, by=c("iso3c")) %>%
filter(!(is.na(regions))) %>%
# filter(iso3c!="GUM") %>% # remove small countries outliers
# filter(iso3c!="ASM") %>%
# filter(iso3c!="BRN") %>%
# filter(iso3c!="WSM") %>%
# filter(iso3c!="PRI") %>%
# filter(iso3c!="KIR") %>%
# filter(iso3c!="LCA") %>%
# filter(iso3c!="SYC") %>%
# filter(iso3c!="TUV") %>%
group_by(year) %>%
mutate(ge_norm=range01(gee)*100) %>%
mutate(rl_norm=range01(rle)*100) %>%
mutate(instit_index=(ge_norm+rl_norm)/2)
ge_norm70 <- quantile(wgi$ge_norm, probs = c(0.7), na.rm = T)
wgi<-import("wgi.csv") %>%
rename(countryname = "Country Name") %>%
rename(varname = "Series Code") %>%
rename(value = "2019 [YR2019]") %>%
mutate_at(vars(value), as.numeric) %>% # warning due to empty rows - deleted below
select(countryname, varname, value) %>%
mutate(iso3c=countrycode(countryname, "country.name", "iso3c")) %>%
select(-countryname) %>%
filter(is.na(iso3c)==F) %>%
mutate(varname = replace(varname, varname=="GE.EST", "gee")) %>%
mutate(varname = replace(varname, varname=="RL.EST", "rle")) %>%
pivot_wider(names_from = varname, values_from = value) %>%
add_column(year=2019) %>%
left_join(population_data, by=c("iso3c", "year")) %>%
left_join(regions, by=c("iso3c")) %>%
filter(!(is.na(regions))) %>%
# filter(iso3c!="GUM") %>% # remove small countries outliers
# filter(iso3c!="ASM") %>%
# filter(iso3c!="BRN") %>%
# filter(iso3c!="WSM") %>%
# filter(iso3c!="PRI") %>%
# filter(iso3c!="KIR") %>%
# filter(iso3c!="LCA") %>%
# filter(iso3c!="SYC") %>%
# filter(iso3c!="TUV") %>%
group_by(year) %>%
mutate(ge_norm=range01(gee)*100) %>%
mutate(rl_norm=range01(rle)*100) %>%
mutate(instit_index=(ge_norm+rl_norm)/2)
ge_norm70 <- quantile(wgi$ge_norm, probs = c(0.7), na.rm = T)
rl_norm70 <- quantile(wgi$rl_norm, probs = c(0.7), na.rm = T)
instit_index50 <- quantile(wgi$instit_index, probs = c(0.5), na.rm = T)
institutional_fig<-wgi %>%
mutate(country_viz=ifelse(ge_norm>ge_norm70|rl_norm>rl_norm70, iso3c,NA)) %>%
ggplot() +
geom_point(aes(y=ge_norm, x=rl_norm, color=regions), size=4, alpha=0.6)+
geom_text_repel(aes(y=ge_norm, x=rl_norm, label=country_viz))+
theme_ipsum()+
ylab("Government Effectiveness Score")+
xlab("Rule of Law Score")+
scale_colour_manual(values=colours)
institutional_fig
ggsave("Figure3.png", units="in", width=7, height=4, dpi=300)
ggsave("Figure3.jpeg", units="in", width=7, height=4, dpi=300)
wgi<-import("wgi.csv") %>%
rename(countryname = "Country Name") %>%
rename(varname = "Series Code") %>%
rename(value = "2019 [YR2019]") %>%
mutate_at(vars(value), as.numeric) %>% # warning due to empty rows - deleted below
select(countryname, varname, value) %>%
mutate(iso3c=countrycode(countryname, "country.name", "iso3c")) %>%
select(-countryname) %>%
filter(is.na(iso3c)==F) %>%
mutate(varname = replace(varname, varname=="GE.EST", "gee")) %>%
mutate(varname = replace(varname, varname=="RL.EST", "rle")) %>%
pivot_wider(names_from = varname, values_from = value) %>%
add_column(year=2019) %>%
left_join(population_data, by=c("iso3c", "year")) %>%
left_join(regions, by=c("iso3c")) %>%
filter(!(is.na(regions))) %>%
filter(iso3c!="GUM") %>% # remove small countries outliers
filter(iso3c!="ASM") %>%
filter(iso3c!="BRN") %>%
filter(iso3c!="WSM") %>%
filter(iso3c!="PRI") %>%
filter(iso3c!="KIR") %>%
filter(iso3c!="LCA") %>%
filter(iso3c!="SYC") %>%
filter(iso3c!="TUV") %>%
group_by(year) %>%
mutate(ge_norm=range01(gee)*100) %>%
mutate(rl_norm=range01(rle)*100) %>%
mutate(instit_index=(ge_norm+rl_norm)/2)
ge_norm70 <- quantile(wgi$ge_norm, probs = c(0.7), na.rm = T)
rl_norm70 <- quantile(wgi$rl_norm, probs = c(0.7), na.rm = T)
instit_index50 <- quantile(wgi$instit_index, probs = c(0.5), na.rm = T)
institutional_fig<-wgi %>%
mutate(country_viz=ifelse(ge_norm>ge_norm70|rl_norm>rl_norm70, iso3c,NA)) %>%
ggplot() +
geom_point(aes(y=ge_norm, x=rl_norm, color=regions), size=4, alpha=0.6)+
geom_text_repel(aes(y=ge_norm, x=rl_norm, label=country_viz))+
theme_ipsum()+
ylab("Government Effectiveness Score")+
xlab("Rule of Law Score")+
scale_colour_manual(values=colours)
institutional_fig
ggsave("Figure3.png", units="in", width=7, height=4, dpi=300)
ggsave("Figure3.jpeg", units="in", width=7, height=4, dpi=300)
ge_norm70
rl_norm70
econ<-WDI(country = "all",
indicator = c(
'gdp_capita'="NY.GDP.PCAP.PP.KD",
'ease_business'="IC.BUS.DFRN.XQ"),
start = 2010,end = 2019,extra = TRUE) %>%
as_tibble() %>%
filter(region!="Aggregates") %>%
arrange(iso3c, year) %>%
left_join(population_data, by=c("iso3c", "year")) %>%
# filter(population>10*10^6) %>%
filter(iso3c!="MAC") %>% # filter out small countries outliers
filter(iso3c!="TCA") %>%
mutate(gdp_log=log(gdp_capita+1)) %>%
fill(ease_business,.direction = "down") %>%
filter(year==2019) %>%
mutate(gdp_score=range01(gdp_capita)*100)
gdp_capita70 <- quantile(econ$gdp_capita, probs = c(0.7), na.rm = T)
ease_business70 <- quantile(econ$ease_business, probs = c(0.7), na.rm = T)
economic_fig <- econ %>%
left_join(regions, by=c("iso3c")) %>%
filter(!is.na(regions)) %>%
mutate(country_viz=ifelse(gdp_capita>gdp_capita70|ease_business>ease_business70, iso3c,NA)) %>%
ggplot() +
geom_point(aes(y=ease_business, x=gdp_capita, color=regions), size=4, alpha=0.6)+
geom_text_repel(aes(y=ease_business, x=gdp_capita, label=country_viz))+
theme_ipsum()+
xlab("GDP per capita (PPP constant 2017 international $)")+
ylab("Ease of doing business (score)")+
scale_colour_manual(values=colours)
economic_fig
ggsave("Figure4.png", units="in", width=7, height=4, dpi=300)
ggsave("Figure4.jpeg", units="in", width=7, height=4, dpi=300)
